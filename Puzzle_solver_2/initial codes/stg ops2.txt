#include <stdio.h>

    
    int i,j,x,y,z,xc,yc,zc,at,bt,ct;
    int d1[]={1 ,2, 1, 3, 7, 6, 2, 9, 8, 1, 5, 4};
    int d2[]={3 ,10, 8, 11, 14, 15};
    int a[20],b[20],c[20];
    
int siz_arr(int arr[20])
{
    
    for(i=0;i<20;i++)
       {
           if(arr[i]==100)
           {
               return i;
           }
           
       }
}    
    
    
void output(int arr[20],int t)
{
    i=0;
    switch(t)
    {
        case 1:
            printf("%d=%d+%d\n",d2[1],d1[arr[0]],d1[arr[1]]);
            d1[arr[0]]=100;
            d1[arr[1]]=100;
            break;
        case 2:
            printf("%d=%d+%d\n",d2[3],d1[arr[0]],d1[arr[1]]);
            
            d1[arr[0]]=100;
            d1[arr[1]]=100;
            break;
        case 3:
            printf("%d=%d+%d\n",d2[5],d1[arr[0]],d1[arr[1]]);
            
            d1[arr[0]]=100;
            d1[arr[1]]=100;
            break;
        case 4:
            while(i>-5)
            {
                if((d1[arr[i]]!=100)&&(d1[arr[i+1]]!=100))
                {  
                    printf("%d=%d+%d\n",d2[1],d1[arr[i]],d1[arr[i+1]]);
                    d1[arr[i]]=100;
                    d1[arr[i+1]]=100;
                    break;
                }
                i+=2;
            }
            
            break;
        case 5:
            while(i>-5)
            {
                if((d1[arr[i]]!=100)&&(d1[arr[i+1]]!=100))
                {  
                    printf("%d=%d+%d\n",d2[3],d1[arr[i]],d1[arr[i+1]]);
                    d1[arr[i]]=100;
                    d1[arr[i+1]]=100;
                    break;
                }
                i+=2;
            }
            
            break;
        case 6:
            while(i>-5)
            {
                if((d1[arr[i]]!=100)&&(d1[arr[i+1]]!=100))
                {  
                    
                    printf("%d=%d+%d\n",d2[5],d1[arr[i]],d1[arr[i+1]]);
                    d1[arr[i]]=100;
                    d1[arr[i+1]]=100;
                    break;
                }
                i+=2;
            }
            
            break;
    }
}
    
    
    
    
void soln_ar(int p,int q ,int r)
{
    for(i=0;i<13;i++)
    {
        
        x=p-d1[i];
        y=q-d1[i];
        z=r-d1[i];
        for(j=(i+1);j<12;j++)
        {
                
                if((x==d1[j]))
                {
                    a[at]=j;
                    a[++at]=i;
                    at++;
                }
                
                if((y==d1[j]))
                {
                    b[bt]=j;
                    b[++bt]=i;
                    bt++;
                }
                if((z==d1[j]))
                {
                    c[ct]=j;
                    c[++ct]=i;
                    ct++;
                }
                
            
        
        }
    }
}
    
int main() 
{
    
    soln_ar(d2[1],d2[3],d2[5]);
    a[at]=100;
    b[bt]=100;
    c[ct]=100;

    xc=siz_arr(a);
    yc=siz_arr(b);
    zc=siz_arr(c);
    
    
    if((zc>0)&&((zc<yc)&&(zc<xc)))
    {
        output(c,3);
    }
    if((yc>0)&&((yc<xc)&&(yc<zc)))
    {
        output(b,2);
    }
    if((xc>0)&&((xc<yc)&&(xc<zc)))
    {
        output(a,1);
    }
    
    if((zc>0)&&((zc>yc)&&(zc<xc))||(zc<yc)&&(zc>xc))
    {
        output(c,6);
    }
    if((yc>0)&&((yc>xc)&&(yc<zc))||(yc<xc)&&(yc>zc))
    {
        output(b,5);
        
    }if((xc>0)&&((xc>yc)&&(xc<zc))||(xc<yc)&&(xc>zc))
    {
        output(a,4);
    }
    if((zc>0)&&((zc>=yc)&&(zc>=xc)))
    {
        output(c,6);
    }
    if((yc>0)&&((yc>=xc)&&(yc>=zc)))
    {
        output(b,5);
    }
    if((xc>0)&&((xc>=yc)&&(xc>=zc)))
    {
        output(a,4);
    }
    if (zc==0)
    {
        
    }
    if (yc==0)
    {
        
    }
    if (xc==0)
    {
        
    }
     
   	return 0;
}